---
title: "T️ipos"
format:
  html: 
    toc: false
    section-divs: true
    include-after-body: 
      - text: |
          <script src="/js/progressive-reveal.js"></script>
          <script src="/js/bootstrapify.js"></script>

engine: knitr
filters:
  - webr
webr:
  cell-options:
    editor-font-scale: 0.85
    fig-width: 6
    fig-height: 3.7
    out-width: "70%"
---

```{r include=FALSE}
library(tidyverse)
library(checkdown)

source(here::here("R", "helpers.R"))
```

### Tipos de datos {.no-hide}

Mira [este video](https://vimeo.com/220490241):

[**Nota:** Puedes activar los subtítulos (en inglés) con el botón _CC_ (CC/Subtitles) o visualizar la transcripción del video con el botón _Transcript_.]{style="font-size:.8em;opacity:.6"}

```{=html}
<div class="ratio ratio-4x3">
<iframe src="https://player.vimeo.com/video/220490241" frameborder="0" allow="autoplay; fullscreen; picture-in-picture" allowfullscreen></iframe>
</div>
```

### Tipos atómicos

::: {.callout-note appearance="simple" icon=false .question}

**¿Cuál de estos NO es un tipo de datos atómico?**

```{r types1, echo=FALSE}
check_question(
  answer = "simple", 
  options = c(
   "numérico/doble",
   "número entero",
   "carácter",
   "lógico",
   "complejo",
   "dato bruto",
   "simple"
  ), 
  type = "radio", 
  button_label = "Registrar respuesta", 
  q_id = 1,
  right = c("¡Correcto!")
)
```

:::

### ¿Qué tipo?

::: {.callout-note appearance="simple" icon=false .question}

**¿Qué tipo de dato es `"1L"`?**

```{r types2, echo=FALSE}
check_question(
  answer = "carácter", 
  options = c(
   "numérico/doble",
   "número entero",
   "carácter",
   "lógico"
  ), 
  type = "radio", 
  button_label = "Registrar respuesta", 
  q_id = 2,
  right = c("¡Correcto! Era difícil, **por las comillas**. Si fuera solamente 1L sería un número entero o _integer_, pero los valores se interpretan como cadenas de texto cuando van entre comillas.")
)
```

:::

### Números enteros

Crea un vector de números enteros del uno al cinco. ¿Puedes deducir por qué querrías usar números enteros en lugar de números continuos/dobles?

::: {.panel-tabset}
## {{< fa code >}}&ensp;Editor interactivo

```{webr-r}



```

## {{< fa circle-check >}}&ensp;Solución

```r
c(1L, 2L, 3L, 4L, 5L)
```

:::


### Aritmética con decimales <!--Floating point arithmetic-->

Los ordenadores tiene una cantidad de memoria finita, limitada, para almacenar números decimales (que a veces pueden requerir precisión infinita). Como resultado, algunos decimales solamente pueden almacenarse como aproximaciones muy precisas. De vez en cuando notarás efectos secundarios de esta imprecisión, como aquí abajo.

Calcula la raíz cuadrada de dos, eleva la respuesta al cuadrado (es decir, multiplica la raíz cuadrada de dos por la raíz cuadrada de dos) y resta dos al resultado. ¿Qué resultado esperabas? ¿Qué resultado has obtenido?

::: {.panel-tabset}
## {{< fa code >}}&ensp;Editor interactivo

```{webr-r}



```

## {{< fa circle-check >}}&ensp;Solución

```r
sqrt(2) * sqrt(2) - 2
sqrt(2)^2 - 2
```

:::


### Vectores

::: {.callout-note appearance="simple" icon=false .question}

**¿Cuántos tipos de datos puedes añadir a un único vector?**

```{r types3, echo=FALSE}
check_question(
  answer = "1", 
  options = c(
   "1",
   "6",
   "Tantos como quieras"
  ), 
  type = "radio", 
  button_label = "Registrar respuesta", 
  q_id = 3,
  right = c("¡Correcto!")
)
```

:::

### ¿Carácter u objeto?

Uno de los errores más comunes en R es llamar a un objeto cuando pretendes llamar a una cadena de texto, y viceversa.

::: {.callout-note appearance="simple" icon=false .question}

**¿Cuáles de los siguientes son nombres de objetos? ¿Cuál es la diferencia entre nombres de objetos y cadenas de caracteres o de texto?**

```{r types4, echo=FALSE}
check_question(
  answer = c("foo", "mu", "a"), 
  options = c(
   "foo",
   '"num"',
   "mu",
   '"sigma"',
   '"data"',
   "a"
  ), 
  type = "checkbox", 
  button_label = "Registrar respuesta", 
  q_id = 4,
  right = c("¡Correcto! Las cadenas de texto están rodeadas de comillas, los nombres de objeto no.")
)
```

:::


##

```{r}
#| echo: false
#| results: asis
create_buttons("06-lists.html")
```
